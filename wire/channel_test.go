// Copyright 2024 PolyCrypt GmbH
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package wire_test

import (
	"github.com/stretchr/testify/require"
	"perun.network/perun-stellar-backend/wire"
	"testing"
)

func TestChannel(t *testing.T) {
	x := []byte{0, 0, 0, 17, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 15, 0, 0, 0, 7, 99, 111, 110, 116, 114, 111, 108, 0, 0, 0, 0, 17, 0, 0, 0, 1, 0, 0, 0, 7, 0, 0, 0, 15, 0, 0, 0, 6, 99, 108, 111, 115, 101, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 8, 100, 105, 115, 112, 117, 116, 101, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 8, 102, 117, 110, 100, 101, 100, 95, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 8, 102, 117, 110, 100, 101, 100, 95, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 9, 116, 105, 109, 101, 115, 116, 97, 109, 112, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 11, 119, 105, 116, 104, 100, 114, 97, 119, 110, 95, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 11, 119, 105, 116, 104, 100, 114, 97, 119, 110, 95, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 6, 112, 97, 114, 97, 109, 115, 0, 0, 0, 0, 0, 17, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 15, 0, 0, 0, 1, 97, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 15, 0, 0, 0, 7, 99, 99, 95, 97, 100, 100, 114, 0, 0, 0, 0, 13, 0, 0, 0, 20, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 0, 0, 15, 0, 0, 0, 12, 115, 116, 101, 108, 108, 97, 114, 95, 97, 100, 100, 114, 0, 0, 0, 18, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 15, 0, 0, 0, 14, 115, 116, 101, 108, 108, 97, 114, 95, 112, 117, 98, 107, 101, 121, 0, 0, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 15, 0, 0, 0, 5, 67, 114, 111, 115, 115, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 65, 4, 94, 157, 73, 33, 151, 191, 169, 143, 219, 169, 31, 156, 130, 41, 41, 80, 70, 218, 110, 40, 210, 191, 89, 177, 26, 87, 41, 10, 132, 111, 72, 160, 89, 238, 81, 0, 189, 105, 170, 156, 5, 87, 112, 240, 74, 230, 237, 153, 12, 24, 61, 223, 219, 18, 246, 89, 224, 21, 244, 177, 121, 170, 144, 215, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 1, 98, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 15, 0, 0, 0, 7, 99, 99, 95, 97, 100, 100, 114, 0, 0, 0, 0, 13, 0, 0, 0, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 0, 15, 0, 0, 0, 12, 115, 116, 101, 108, 108, 97, 114, 95, 97, 100, 100, 114, 0, 0, 0, 18, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 15, 0, 0, 0, 14, 115, 116, 101, 108, 108, 97, 114, 95, 112, 117, 98, 107, 101, 121, 0, 0, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 15, 0, 0, 0, 5, 67, 114, 111, 115, 115, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 65, 4, 215, 203, 163, 62, 243, 31, 74, 161, 65, 211, 125, 170, 68, 116, 100, 17, 37, 187, 175, 125, 251, 197, 48, 181, 23, 23, 12, 128, 46, 255, 213, 95, 24, 239, 159, 239, 151, 112, 223, 25, 240, 35, 79, 85, 134, 212, 230, 72, 76, 41, 5, 75, 77, 73, 70, 150, 215, 245, 78, 199, 30, 126, 166, 208, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 18, 99, 104, 97, 108, 108, 101, 110, 103, 101, 95, 100, 117, 114, 97, 116, 105, 111, 110, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 15, 0, 0, 0, 5, 110, 111, 110, 99, 101, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 32, 63, 228, 91, 176, 60, 26, 249, 17, 191, 79, 215, 141, 145, 110, 8, 33, 162, 51, 24, 148, 197, 186, 102, 104, 112, 0, 136, 104, 168, 73, 148, 255, 0, 0, 0, 15, 0, 0, 0, 5, 115, 116, 97, 116, 101, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 15, 0, 0, 0, 8, 98, 97, 108, 97, 110, 99, 101, 115, 0, 0, 0, 17, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 15, 0, 0, 0, 5, 98, 97, 108, 95, 97, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150, 0, 0, 0, 15, 0, 0, 0, 5, 98, 97, 108, 95, 98, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 250, 0, 0, 0, 15, 0, 0, 0, 6, 116, 111, 107, 101, 110, 115, 0, 0, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 15, 0, 0, 0, 5, 77, 117, 108, 116, 105, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 18, 0, 0, 0, 1, 128, 17, 187, 244, 205, 240, 78, 91, 198, 172, 136, 105, 53, 185, 154, 164, 178, 192, 202, 189, 225, 51, 249, 215, 251, 62, 101, 103, 153, 240, 168, 150, 0, 0, 0, 18, 0, 0, 0, 1, 4, 202, 219, 74, 87, 15, 210, 228, 101, 46, 129, 65, 1, 80, 153, 18, 204, 230, 201, 162, 50, 93, 110, 236, 141, 113, 0, 202, 248, 89, 243, 224, 0, 0, 0, 15, 0, 0, 0, 10, 99, 104, 97, 110, 110, 101, 108, 95, 105, 100, 0, 0, 0, 0, 0, 16, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 13, 0, 0, 0, 32, 58, 135, 41, 8, 183, 220, 202, 18, 243, 154, 126, 198, 166, 1, 104, 233, 40, 208, 243, 61, 155, 98, 122, 2, 8, 77, 77, 59, 34, 23, 46, 210, 0, 0, 0, 13, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 9, 102, 105, 110, 97, 108, 105, 122, 101, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 7, 118, 101, 114, 115, 105, 111, 110, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0}
	channel := &wire.Channel{}
	err := channel.UnmarshalBinary(x)
	require.NoError(t, err)
	res, err := channel.MarshalBinary()
	require.NoError(t, err)
	require.Equal(t, x, res)
}
