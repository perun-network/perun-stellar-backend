package wire_test

import (
	"github.com/stretchr/testify/require"
	"perun.network/perun-stellar-backend/wire"
	"testing"
)

func TestChannel(t *testing.T) {
	x := []byte{0, 0, 0, 17, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 15, 0, 0, 0, 7, 99, 111, 110, 116, 114, 111, 108, 0, 0, 0, 0, 17, 0, 0, 0, 1, 0, 0, 0, 7, 0, 0, 0, 15, 0, 0, 0, 6, 99, 108, 111, 115, 101, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 8, 100, 105, 115, 112, 117, 116, 101, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 8, 102, 117, 110, 100, 101, 100, 95, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 8, 102, 117, 110, 100, 101, 100, 95, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 9, 116, 105, 109, 101, 115, 116, 97, 109, 112, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 11, 119, 105, 116, 104, 100, 114, 97, 119, 110, 95, 97, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 11, 119, 105, 116, 104, 100, 114, 97, 119, 110, 95, 98, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 6, 112, 97, 114, 97, 109, 115, 0, 0, 0, 0, 0, 17, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 15, 0, 0, 0, 1, 97, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 15, 0, 0, 0, 4, 97, 100, 100, 114, 0, 0, 0, 18, 0, 0, 0, 1, 33, 51, 38, 216, 94, 104, 60, 95, 201, 68, 34, 38, 19, 154, 177, 126, 166, 239, 35, 70, 87, 92, 111, 155, 136, 232, 97, 200, 2, 113, 142, 45, 0, 0, 0, 15, 0, 0, 0, 6, 112, 117, 98, 107, 101, 121, 0, 0, 0, 0, 0, 13, 0, 0, 0, 32, 138, 168, 57, 43, 69, 220, 86, 65, 46, 142, 9, 41, 77, 209, 98, 227, 110, 250, 188, 94, 141, 146, 8, 84, 176, 10, 181, 208, 111, 23, 195, 128, 0, 0, 0, 15, 0, 0, 0, 1, 98, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 0, 15, 0, 0, 0, 4, 97, 100, 100, 114, 0, 0, 0, 18, 0, 0, 0, 1, 54, 126, 124, 170, 14, 66, 237, 32, 130, 122, 190, 185, 235, 5, 11, 7, 174, 52, 43, 111, 248, 178, 245, 217, 196, 79, 72, 69, 30, 92, 173, 135, 0, 0, 0, 15, 0, 0, 0, 6, 112, 117, 98, 107, 101, 121, 0, 0, 0, 0, 0, 13, 0, 0, 0, 32, 198, 110, 153, 155, 207, 65, 232, 251, 170, 116, 250, 218, 34, 78, 186, 124, 12, 123, 14, 67, 225, 189, 2, 217, 179, 38, 247, 170, 250, 88, 172, 100, 0, 0, 0, 15, 0, 0, 0, 18, 99, 104, 97, 108, 108, 101, 110, 103, 101, 95, 100, 117, 114, 97, 116, 105, 111, 110, 0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 15, 0, 0, 0, 5, 110, 111, 110, 99, 101, 0, 0, 0, 0, 0, 0, 13, 0, 0, 0, 32, 167, 227, 246, 89, 1, 11, 117, 248, 64, 115, 191, 29, 226, 14, 42, 64, 180, 8, 5, 38, 96, 118, 210, 229, 2, 82, 96, 187, 137, 133, 56, 90, 0, 0, 0, 15, 0, 0, 0, 5, 115, 116, 97, 116, 101, 0, 0, 0, 0, 0, 0, 17, 0, 0, 0, 1, 0, 0, 0, 4, 0, 0, 0, 15, 0, 0, 0, 8, 98, 97, 108, 97, 110, 99, 101, 115, 0, 0, 0, 17, 0, 0, 0, 1, 0, 0, 0, 3, 0, 0, 0, 15, 0, 0, 0, 5, 98, 97, 108, 95, 97, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 15, 0, 0, 0, 5, 98, 97, 108, 95, 98, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 200, 0, 0, 0, 15, 0, 0, 0, 5, 116, 111, 107, 101, 110, 0, 0, 0, 0, 0, 0, 18, 0, 0, 0, 1, 115, 100, 94, 175, 122, 86, 241, 234, 76, 123, 122, 25, 44, 31, 17, 97, 248, 88, 65, 165, 45, 214, 88, 65, 124, 10, 171, 36, 105, 116, 213, 227, 0, 0, 0, 15, 0, 0, 0, 10, 99, 104, 97, 110, 110, 101, 108, 95, 105, 100, 0, 0, 0, 0, 0, 13, 0, 0, 0, 32, 24, 255, 93, 22, 90, 12, 183, 31, 139, 73, 106, 35, 75, 37, 233, 72, 131, 174, 135, 56, 56, 175, 189, 129, 239, 63, 190, 175, 7, 186, 165, 24, 0, 0, 0, 15, 0, 0, 0, 9, 102, 105, 110, 97, 108, 105, 122, 101, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 0, 0, 0, 7, 118, 101, 114, 115, 105, 111, 110, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0}
	channel := &wire.Channel{}
	err := channel.UnmarshalBinary(x)
	require.NoError(t, err)
	res, err := channel.MarshalBinary()
	require.NoError(t, err)
	require.Equal(t, x, res)
}
